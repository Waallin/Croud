PUSH TO DB//////////

  async function pushData() {
    
    await setDoc(doc(database, "Games", uuidv4()), {
      active: false,
      orgName: orgData.OrgData,
      opponent: opponent,
      location: location,
      day: day,
      time: hour + "." + min,
    });
  }


import { useNavigation } from "@react-navigation/native";
  const navigate = useNavigation();
  function logout() {
    console.log(navigate.navigate("login"));
  }

        navigate.navigate("AdminContainer", {
          orgData: docSnap.data()
        });
      }


GET FROM DB////////////

async function data() {

    const q = query(
      collection(database, "Games"),
      where("orgName", "==", "Admin")
    );

    const querySnapshot = await getDocs(q);
    let x = [];
    querySnapshot.forEach((doc) => {
      // doc.data() is never undefined for query doc snapshots
      //console.log(doc.id, " => ", doc.data());

      let obj = {
        id: doc.id,
        opponent: doc.data().opponent,
        time: doc.data().time,
        day: doc.data().day,
        location: doc.data().location,
      };
      x.push(obj);

    });



      //filter on dates
     let dateFilter = x.sort(function (a, b) {
      return new Date(a.day) - new Date(b.day);
    });



        //filter on dates
    let dateFilter = x.sort(function (a, b) {
      return new Date(a.Day) - new Date(b.Day);
    });
    setEvents(dateFilter);




    //admin => {
      starta match när man ställer sig i entre för att ta emot biljett
      starta egen match-view

      skicka notiser => {

        köpa lotter
        rösta matchens lirare
        }

        match-view => {
        visa antal åsådare
        matchprogram?
        }
    }


    //användare => {

      visa att en match är igång (pulserande? ikon?)
      gå in i match
      köpa olika sorters biljetter och antal. exempelvis 2 vuxna
      få qr-kod (biljett)

      komma in egen i match-view
    }